<Window  
    x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:WpfApp1"
        xmlns:local="clr-namespace:WpfApp1"
        xmlns:converter="clr-namespace:System.Windows" 
        d:DataContext="{d:DesignInstance Type=vm:WindowViewModel}"
        MouseDown="Window_MouseDown"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d"
        WindowStyle="None"
        MinWidth="600"
        MinHeight="450"
        ResizeMode="CanResizeWithGrip"
        x:Name="AppWindow" 
        Icon="Resources/calculation.png"
        Title="Inertia Calculator" Height="500" Width="650">

    <Window.Resources>
        <converter:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
    </Window.Resources>

    <Grid>
        <Grid.Resources>
            <ControlTemplate x:Key="windowControls" TargetType="Button" >
                <Grid>
                    <ContentPresenter x:Name="buttons" Opacity="0.5" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="buttons" Property="Opacity" Value="1"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Grid.Resources>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="4*" />
            <RowDefinition Height="46*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--title bar-->
        <Border BorderThickness="0">
            <Border.Background>
                <SolidColorBrush Color="#EFEFEF"/>
            </Border.Background>

            <!--Window Icon and Title-->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Icon -->
                <Border Grid.Column="0" Padding ="3 3 0 3">
                    <Image Source="Resources/Jacobs.png" Height="30" VerticalAlignment="Center" HorizontalAlignment="Left" />
                </Border>

                <!--Title-->
                <Label Grid.Column="1" Content="Inertia Calculator" Height="Auto" Width="Auto" FontSize="20"
                    FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center"
                    />

                <!-- Close, Min, Max -->
                <Grid Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>


                    <Button Margin="0 0 0 10" Grid.Column="1" Command="{Binding MinimizeCommand}" Template="{StaticResource windowControls}">
                        <Image Source="Images/min.jpg" />
                    </Button>
                    <Button Margin="0 0 0 10" Grid.Column="2" Command="{Binding MaximizeCommand}" Template="{StaticResource windowControls}">
                        <Image Source="Images/full.jpg"/>
                    </Button>
                    <Button Margin="0 0 0 10" Grid.Column="3" Command="{Binding CloseCommand}" Template="{StaticResource windowControls}">
                        <Image Source="Images/close.png" />
                    </Button>
                </Grid>
            </Grid>
        </Border>

        <!--Main Content -->
        <Grid Grid.Row="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
            </Grid.ColumnDefinitions>

            <!--User Inputs-->
            <GroupBox Grid.Column="1" Header="Properties" FontWeight="DemiBold">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>

                    <!-- Labels in Column 0 of Inner Grid -->
                    <Label Grid.Row="1" Grid.Column="0" Content="Section Type" FontWeight="Bold"/>
                    <Label Visibility="{Binding Option, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource booleanToVisibilityConverter}}" 
                           Grid.Row="2" Grid.Column="0" Content="Width" FontWeight="Bold"/>
                    <Label Visibility="{Binding Option, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource booleanToVisibilityConverter}}" 
                           Grid.Row="3" Grid.Column="0" Content="Height" FontWeight="Bold"/>
                    <Label Grid.Row="4" Grid.Column="0" Content="Cover" FontWeight="Bold"/>

                    <TextBlock Grid.Row="6" Grid.Column="0" Text="Rebar A" FontWeight="ExtraBold"/>
                    <TextBlock Grid.Row="7" Grid.Column="0" FontWeight="Bold"> Rebar
                        I<Run FontSize="7pt" BaselineAlignment="TextBottom">x</Run>
                    </TextBlock>
                    <TextBlock Grid.Row="8" Grid.Column="0" FontWeight="Bold"> Rebar
                        I<Run FontSize="7pt" BaselineAlignment="TextBottom">y</Run>
                    </TextBlock>
                    <TextBlock Grid.Row="9" Grid.Column="0" FontWeight="Bold"> Rebar
                        r<Run FontSize="7pt" BaselineAlignment="TextBottom">x</Run>
                    </TextBlock>
                    <TextBlock Grid.Row="10" Grid.Column="0" FontWeight="Bold"> Rebar
                        r<Run FontSize="7pt" BaselineAlignment="TextBottom">y</Run>
                    </TextBlock>
                    
                    
                    <!--Table in Column 0 of Inner Grid-->
                    <DataGrid Grid.Row="5" Grid.ColumnSpan="3" Margin="5,5,5,5" 
                              CanUserAddRows="True" CanUserDeleteRows="True" 
                              VerticalGridLinesBrush="AliceBlue"
                              GridLinesVisibility="Vertical"
                              IsReadOnly="False" AutoGenerateColumns="False"
                              ItemsSource="{Binding Entries}" HeadersVisibility="Column"
                              EnableRowVirtualization="False"
                              FontStyle="Normal" Foreground="Black"
                              SelectionMode="Single"
                              Background="White">

                        <DataGrid.Resources>
                            <Style x:Key="ColumnHeaderStyle" TargetType="DataGridColumnHeader">
                                <Setter Property="Background" Value="#EFEFEF"/>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.ColumnHeaderStyle>
                            <StaticResource ResourceKey="ColumnHeaderStyle" />
                        </DataGrid.ColumnHeaderStyle>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Row" Width="*" IsReadOnly="True" Binding="{Binding Count}">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="#EFEFEF" />
                                        <Setter Property="Padding" Value="4,2,2,2" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="R Diameter" Binding="{Binding Dia}" Width="2*"/>
                            <DataGridTextColumn Header="Number" Binding="{Binding Num}" Width="2*"/>
                            <DataGridTextColumn Header="Delta Y" Binding="{Binding DeltaY}" Width="2*"/>
                            <DataGridTemplateColumn Header="Delete" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Delete" Command="Delete"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!--Controls in Column 2 -->
                    <ComboBox x:Name="section" Margin="0 2 5 2"  Padding="2 2 0 0" 
                              Grid.Row="1" Grid.Column="1" 
                              Grid.ColumnSpan="2" 
                              SelectedItem="{Binding MySelectedItem}">
                        <ComboBoxItem Tag="CC">Circular Column</ComboBoxItem>
                        <ComboBoxItem Tag="RC">Rectangular Column</ComboBoxItem>
                        <ComboBoxItem Tag="RB">Rectangular Beam</ComboBoxItem>
                    </ComboBox>
                    <Border Visibility="{Binding Option, 
                        Converter={StaticResource booleanToVisibilityConverter}}" Margin="0 2 5 2"  
                            Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="0">
                        <TextBox Padding="2 2 0 0"/>
                    </Border>
                    <Border Visibility="{Binding Option, 
                        Converter={StaticResource booleanToVisibilityConverter}}" Margin="0 2 5 2"  
                            Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="0">
                        <TextBox Padding="2 2 0 0"/>
                    </Border>
                    <Border Margin="0 2 5 2"  Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="0">
                        <TextBox Padding="2 2 0 0"/>
                    </Border>


                    <!-- Labels in Column 2 of Inner Grid -->
                    <TextBlock Grid.Row="6" Grid.Column="2" Text="Total A" FontWeight="ExtraBold"/>
                    <TextBlock Grid.Row="7" Grid.Column="2" FontWeight="Bold"> Total
                        I<Run FontSize="7pt" BaselineAlignment="TextBottom">x</Run>
                    </TextBlock>
                    <TextBlock Grid.Row="8" Grid.Column="2" FontWeight="Bold"> Total
                        I<Run FontSize="7pt" BaselineAlignment="TextBottom">y</Run>
                    </TextBlock>
                    <TextBlock Grid.Row="9" Grid.Column="2" FontWeight="Bold"> Total
                        r<Run FontSize="7pt" BaselineAlignment="TextBottom">x</Run>
                    </TextBlock>
                    <TextBlock Grid.Row="10" Grid.Column="2" FontWeight="Bold"> Total
                        r<Run FontSize="7pt" BaselineAlignment="TextBottom">y</Run>
                    </TextBlock>
                </Grid>
            </GroupBox>

            <!--Diagram-->

            <GroupBox Margin="10 0 0 0" Grid.Column="3" Header="Diagram" FontWeight="DemiBold">
                <Canvas Width="200" Height="200">
                    <!-- Circle representing the section -->
                    <Rectangle Width="191" Height="191" Stroke="Black" StrokeThickness="3" Fill="LightGray" HorizontalAlignment="Center" Canvas.Left="-1" Canvas.Top="-1" VerticalAlignment="Center"/>

                    <!-- Rebars -->
                    <Ellipse Width="10" Height="10" Fill="Black" Canvas.Left="95" Canvas.Top="15" RenderTransformOrigin="2.4,0.585"/>
                    <Ellipse Width="10" Height="10" Fill="Black" Canvas.Left="150" Canvas.Top="15" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Ellipse Width="10" Height="10" Fill="Black" Canvas.Left="40" Canvas.Top="15" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    <!-- Coordinate axes -->
                    <Line X1="0" Y1="0" X2="0" Y2="100" Stroke="Green" StrokeThickness="2"/>
                    <Line X1="100" Y1="0" X2="0" Y2="0" Stroke="Red" StrokeThickness="2" HorizontalAlignment="Center" Canvas.Left="-1" VerticalAlignment="Center" Width="101"/>

                    <!-- X axis label -->
                    <TextBlock Text="X" Foreground="Red" Canvas.Left="93" Canvas.Top="-21" RenderTransformOrigin="-13.01,-5.753"/>
                    <!-- Y axis label -->
                    <TextBlock Text="Y" Foreground="Green" Canvas.Left="-18" Canvas.Top="84"/>
                </Canvas>
            </GroupBox>

        </Grid>

    </Grid>
</Window>
